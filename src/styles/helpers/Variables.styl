/* --- Variables globales --- */
font_family = var(--font-family);
background_color = var(--background-color);
primary_color = var(--primary-color);
text_color = var(--text-color);
secondary_color = var(--secondary-color);
third_color = var(--third-color);
/* --- Variables Internas --- */
_bold = 700;
_semibold = 600;
_medium = 500;
_regular = 400;
_light = 300;

/* --- Funciones internas --- */
custom_font(size = 1, weight = normal, font_color, font_family = var(--font-family)) {
    font-family: font_family;
    font-size: unit(size, rem);
    font-weight: weight;
    color: font_color;
}

/* ---  Tipografias --- */
H1(_color = var(--text-color), _weight = _bold) {
    custom_font(3.2, _weight, _color);
}

H2(_color = var(--text-color), _weight = _semibold) {
    custom_font(2, _weight, _color);
}

H3(_color = var(--text-color), _weight = _semibold) {
    custom_font(1.6, _weight, _color);
}

Extract(_color = var(--text-color), _weight = _regular) {
    custom_font(1.4, _weight, _color);
}

Regular_P(_color = var(--text-color), _weight = _regular) {
    custom_font(1.3, _weight, _color);
}

Small_P(_color = var(--text-color), _weight = _regular) {
    custom_font(1.2, _weight, _color);
}

Dates(_color = var(--text-color), _weight = _light) {
    custom_font(1.2, _weight, _color);
}

Extra_Small(_color = var(--text-color), _weight = _regular) {
    custom_font(1, _weight, _color);
}

/* Funciones de ayuda :D */
Dots(dot_size = 10px, margin_space = 10px, container_height = 20px, dot_color = primary_color) {
    &:not(:last-child) {
        margin-right: margin_space;

        &:after {
            position: absolute;
            content: '';
            display: inline-block;
            width: dot_size;
            height: dot_size;
            background-color: dot_color;
            border-radius: 50%;
            margin: (container_height / 2) - (dot_size / 2) 0px 0px (margin_space / 2) - (dot_size / 2);
        }
    }
}

Arrow(size = 12px) {
    &::after {
        content: '\1F86D';
        position: absolute;
        font-size: size;
        margin-left: 2px;
        transition: transform 200ms ease-out;
    }

    &:hover {
        text-decoration: underline;

        &::after {
            transform: translate(2px, -3px);
            transition: transform 200ms ease-out;
        }
    }
}

No_Image(width_size = 10px, height_size = width_size) {
    width: width_size;
    height: height_size;
    background: var(--image-place-holder-gr);
}

Down_Arrow(size = 10px) {
    &::after {
        position: absolute;
        margin-left: 7px;
        margin-top: (size / 2) - (size / 2) - 2px;
        content: '\1F863';
        display: inline-block;
        // border-bottom: 1px solid;
        height: size + 3px;
        font-size: size;
    }

    &:hover {
        text-decoration: underline;

        &::after {
            // height: size + 1px;
            transform: translateY(2px);
            transition: all 200ms ease-in;
        }
    }
}